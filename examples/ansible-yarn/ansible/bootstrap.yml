---

- name: Create instance
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    keypair: default
    instance_type: m1.small
    security_group: default
    region: "{{ lookup('env', 'AWS_REGION') }}"
    image: ami-04ea7a3e # Ubuntu 12.04 LTS 64 bit
  tasks:
    - local_action: ec2 keypair={{ keypair }} group={{ security_group }} instance_type={{ instance_type }}
                    region={{ region }} image={{ image }} wait=true
      register: ec2
    - local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
      with_items: ec2.instances
      args:
        tags:
          Name: "{{ instance_name }}"
    - local_action: add_host hostname={{ item.public_ip }} groupname=bootstrap
      with_items: ec2.instances
    - local_action: wait_for host={{ item.public_dns_name }} port=22 delay=60 timeout=320 state=started
      with_items: ec2.instances

#- name: Update everything
#  hosts: bootstrap
#  user: ubuntu
#  sudo: yes
#  tasks:
#    - apt: upgrade=dist update_cache=yes

- name: Install EC2 AMI tools
  hosts: bootstrap
  user: ubuntu
  sudo: yes
  vars:
    region: "{{ lookup('env', 'AWS_REGION') }}"
  tasks:
    - apt_repository: repo="deb http://{{ region }}.ec2.archive.ubuntu.com/ubuntu/ precise multiverse" state=present
    - apt_repository: repo="deb http://{{ region }}.ec2.archive.ubuntu.com/ubuntu/ precise-updates multiverse" state=present
    - apt_repository: repo="deb http://{{ region }}.ec2.archive.ubuntu.com/ubuntu/ precise-backports main restricted universe multiverse" state=present
    - apt_repository: repo="deb http://security.ubuntu.com/ubuntu precise-security multiverse" state=present
    - apt: pkg=ec2-api-tools update_cache=yes
    - apt: pkg=ec2-ami-tools

- name: Create admin user
  hosts: bootstrap
  user: ubuntu
  sudo: yes
  vars:
    username: "{{ admin_user }}"
    groupname: "{{ admin_user }}"
  tasks:
    - include: tasks/user.yml
    - user: name={{ admin_user }} groups=sudo,admin

- name: Configure security
  hosts: bootstrap
  user: ubuntu
  sudo: yes
  tasks:
    - template: src=templates/etc/sudoers dest=/etc/sudoers mode=440
    - template: src=templates/etc/ssh/sshd_config dest=/etc/ssh/sshd_config
      notify:
        - restart sshd
  handlers:
    - include: handlers.yml

